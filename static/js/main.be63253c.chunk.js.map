{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","App.module.css","redux/actions.js","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.jsx","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","addNewContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","connect","dispatch","addContact","newContact","actions","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","className","styles","form","htmlFor","type","onChange","pattern","title","required","input","state","contacts","filter","items","normalizedFilter","toLowerCase","contact","includes","onClick","onDelete","map","target","App","app","createReducer","dataContacts","action","find","elem","alert","item","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.be63253c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"input\":\"Form_input__2ESfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__nkQh1\",\"input\":\"Contacts_input__jXMGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addNewContact = createAction(\n  'phonebook/addNewContact',\n  ({ name, number }) => ({\n    //Using Prepare Callbacks to Customize Action Contents\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  }),\n);\n\nconst deleteContact = createAction('phonebook/deleteContact');\nconst changeFilter = createAction('phonebook/changeFilter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addNewContact, deleteContact, changeFilter };\n\n/** REDUX CORE -----------------------------------------------\n \n import { v4 as uuidv4 } from 'uuid';\n \n import actionTypes from './actionTypes';\n\nconst addNewContact = ({ name, number }) => ({\n  type: actionTypes.ADD,\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n});\n\nconst deleteContact = id => ({\n  type: actionTypes.DELETE,\n  payload: id,\n});\n\nconst changeFilter = value => ({\n  type: actionTypes.FILTER,\n  payload: value,\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addNewContact, deleteContact, changeFilter };\n \n */\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport actions from '../../redux/actions';\nimport styles from './Form.module.css';\n\nfunction Form({ addContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    addContact({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label htmlFor=\"\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          className={styles.input}\n        />\n      </label>\n\n      <label htmlFor=\"\">\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          className={styles.input}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: newContact => dispatch(actions.addNewContact(newContact)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport actions from '../../redux/actions';\nimport styles from './Contacts.module.css';\n\nfunction Contacts({ onClick, contacts }) {\n  const onDelete = id => {\n    onClick(id);\n  };\n\n  return (\n    <ul className={styles.contacts}>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          <p>\n            {contact.name}:{contact.number}\n          </p>\n          <button type=\"button\" onClick={() => onDelete(contact.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = state => {\n  const { filter, items } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return {\n    contacts: filteredContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport actions from '../../redux/actions';\nimport styles from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contact by name\n      <input\n        name=\"filter\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={styles.filter}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(actions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport styles from './App.module.css';\n\nexport default function App() {\n  return (\n    <div className={styles.app}>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport actions from './actions';\nimport dataContacts from '../contacts.json';\n\nconst items = createReducer(dataContacts, {\n  // [actions.addNewContact]: (state, action) => [...state, action.payload],\n  [actions.addNewContact]: (state, action) => {\n    if (state.find(elem => elem.name === action.payload.name)) {\n      alert(`${action.payload.name} is already in contacts`);\n      return state;\n    }\n    return [...state, action.payload];\n  },\n  [actions.deleteContact]: (state, action) =>\n    state.filter(item => item.id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n\n/**\n NOTE:  -----------------------------------------------\n1)\n [actionTypes.ADD]: (state, action) => [...state, action.payload]\n => ----- analog expression ----- =>\n'phonebook/addNewContact': (state, action) => [...state, action.payload]\n\n 2)\n [actions.addNewContact]\n => ----- programmatically toString() ----- =>\n => ----- see logger in Console as example ----- =>\n actions.addNewContact.type\n\n 3)\n      (_, action)  ------=> the first parameter is not used\n\n\n */\n\n/** REDUX CORE -----------------------------------------------\n \nimport { combineReducers } from 'redux';\n\nimport actionTypes from './actionTypes';\nimport dataContacts from '../contacts.json';\n\nconst items = (state = dataContacts, { type, payload }) => {\n  switch (type) {\n    case actionTypes.ADD:\n      if (state.find(elem => elem.name === payload.name)) {\n        alert(`${payload.name} is already in contacts`);\n        return state;\n      }\n      return [...state, payload];\n\n    case actionTypes.DELETE:\n      return state.filter(item => item.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case actionTypes.FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n \n */\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsReducer from './reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport { store, persistor };\n\n/** REDUX CORE -----------------------------------------------\n \nimport { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from './reducers';\n\nconst rootReducer = combineReducers({\n  contacts: reducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store; \n \n */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}