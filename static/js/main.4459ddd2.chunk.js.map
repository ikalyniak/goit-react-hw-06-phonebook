{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","App.module.css","redux/actionTypes.js","redux/actions.js","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.jsx","redux/reducers.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","actionTypes","ADD","DELETE","FILTER","name","number","type","payload","id","uuidv4","value","connect","dispatch","addContact","newContact","actions","useState","setName","setNumber","handleChange","event","currentTarget","reset","onSubmit","preventDefault","className","styles","form","htmlFor","onChange","pattern","title","required","input","state","contacts","filter","items","normalizedFilter","toLowerCase","contact","includes","onClick","onDelete","map","target","App","app","combineReducers","dataContacts","find","elem","alert","item","rootReducer","reducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4459ddd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__nkQh1\",\"input\":\"Contacts_input__jXMGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","const actionTypes = {\n  ADD: 'phonebook/addNewContact',\n  DELETE: 'phonebook/deleteContact',\n  FILTER: 'phonebook/changeFilter',\n};\nexport default actionTypes;\n","import actionTypes from './actionTypes';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addNewContact = ({ name, number }) => ({\n  type: actionTypes.ADD,\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n});\n\nconst deleteContact = id => ({\n  type: actionTypes.DELETE,\n  payload: id,\n});\n\nconst changeFilter = value => ({\n  type: actionTypes.FILTER,\n  payload: value,\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addNewContact, deleteContact, changeFilter };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport actions from '../../redux/actions';\nimport styles from './Form.module.css';\n\nfunction Form({ addContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    addContact({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label htmlFor=\"\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          className={styles.input}\n        />\n      </label>\n\n      <label htmlFor=\"\">\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          className={styles.input}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: newContact => dispatch(actions.addNewContact(newContact)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport actions from '../../redux/actions';\nimport styles from './Contacts.module.css';\n\nfunction Contacts({ onClick, contacts }) {\n  const onDelete = id => {\n    onClick(id);\n  };\n\n  return (\n    <ul className={styles.contacts}>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          <p>\n            {contact.name}:{contact.number}\n          </p>\n          <button type=\"button\" onClick={() => onDelete(contact.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = state => {\n  const { filter, items } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return {\n    contacts: filteredContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport actions from '../../redux/actions';\nimport styles from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contact by name\n      <input\n        name=\"filter\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={styles.filter}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(actions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport styles from './App.module.css';\n\nexport default function App() {\n  return (\n    <div className={styles.app}>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\n\nimport actionTypes from './actionTypes';\nimport dataContacts from '../contacts.json';\n\nconst items = (state = dataContacts, { type, payload }) => {\n  switch (type) {\n    case actionTypes.ADD:\n      if (state.find(elem => elem.name === payload.name)) {\n        alert(`${payload.name} is already in contacts`);\n        return state;\n      }\n      return [...state, payload];\n\n    case actionTypes.DELETE:\n      return state.filter(item => item.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case actionTypes.FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from './reducers';\n\nconst rootReducer = combineReducers({\n  contacts: reducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"input\":\"Form_input__2ESfd\"};"],"sourceRoot":""}